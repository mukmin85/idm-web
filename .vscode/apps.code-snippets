{
	// Place your immigrationportal workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "javascript,typescript",
		"prefix": "niise_log",
		"body": [
			"console.log('$1');",
		],
		"description": "Log output to console"
	},
	"New_Page": {
		"prefix": "niise_new_page",
		"body": [
			"// import React, { useState, useEffect } from \"react\"",
			"",
			"// router",
			"",
			"// api, cookies, query",
			"",
			"// redux",
			"// import { useSelector } from \"react-redux\"",
			"// import { themeData } from \"../../redux/slices/theme\"",
			"",
			"// styles, assets",
			"// import { } from \"./styled\"",
			"",
			"// components",
			"import { Card } from \"../../components\"",
			"",
			"// antd",
			"import { Layout } from \"antd\"",
			"const { Content } = Layout",
			"",
			"const ${1:page_name} = () => {",
			"// const [example, setExample] = useState()",
			"",
			"// useEffect(() => {",
			"//   getExample()",
			"// }, [])",
			"// const isDarkMode: any = useSelector(themeData).darkmode",
			"",
			"  return (",
			"    <Content>",
			"      <Card>",
			"        <>",
			"         ${2:start_content_here}",
			"        </>",
			"      </Card>",
			"    </Content>",
			"  )",
			"};",
			"",
			"export default ${1:page_name};",
			""
		],
		"description": "Create New App Page"
	},
	"New_Component": {
		"prefix": "niise_new_comp",
		"body": [
			"import React from \"react\"",
			"",
			"// redux",
			"// import { useSelector } from \"react-redux\"",
			"// import { themeData } from \"../../redux/slices/theme\"",
			"",
			"// styles, assets",
			"// import { } from \"./styled\"",
			"",
			"// antd",
			"// import { } from \"antd\"",
			"",
			"interface ${1:component_name}Props { }",
			"",
			"const ${1:component_name} = ({ }: ${1:component_name}Props) => {",
			"  // const isDarkMode: any = useSelector(themeData).darkmode",
			"",
			"  return (",
			"    ${2:start component content here}",
			"  )",
			"};",
			"",
			"export default ${1:component_name};",
			""
		],
		"description": "Create New App Component"
	},
	"New_Styled_Components": {
		"prefix": "niise_new_styled",
		"body": [
			"import styled from \"styled-components\"",
			"",
			"// antd",
			"// import { } from \"antd\"",
			"",
			"// example html",
			"// const Container = styled.div`",
			"//   display: flex;",
			"// `",
			"// example antd",
			"// const ButtonContainer = styled(Button)`",
			"//   display: flex;",
			"// `",
			"// export { Container, ButtonContainer }",
			"",
			"// start styled component content here",
			"export { }"
		],
		"description": "Create New App Styled"
	},
	"New_Global_Styled_Components": {
		"prefix": "niise_new_global_styled",
		"body": [
			"import * as styled from \"styled-components\"",
			"",
			"const ${1:global_styled_name} = styled.createGlobalStyle`",
			"   //start styles content here",
			"`",
			"export default ${1:global_styled_name}"
		],
		"description": "Create New App Styled"
	}
}